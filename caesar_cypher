alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u',
            'v', 'w', 'x', 'y', 'z']

direction = input("Type 'encode' to encrypt, type 'decode' to decrypt:\n")
text = input("Type your message:\n").lower()
shift = int(input("Type the shift number:\n"))


# Encryption of word
# def caesar(start_text, shift_amount, cipher_direction):
#     end_text = ""
#     for letter in start_text:
#         position = alphabet.index(letter)
#         if cipher_direction == "decode":
#             shift_amount *= -1
#         new_position = position + shift_amount
#         new_letter = alphabet[new_position % len(alphabet)]
#         end_text += alphabet[new_position]
#     print(f"The {cipher_direction}d text is {end_text}")
#
#
# caesar(start_text=text, shift_amount=shift, cipher_direction=direction)

# if restart == "yes":
#     caesar(start_text=text, shift_amount=shift, cipher_direction=direction)
# else:
#     print("Thank you.")
# Encrypt the word
def encrypt(reg_text, shift_amount):
    cipher_text = ""
    for letter in reg_text:
        position = alphabet.index(letter)
        new_position = position + shift_amount
        new_letter = alphabet[new_position % len(alphabet)]
        cipher_text += new_letter
    print(f"The encoded message is {cipher_text}.")

# Decryption of word
def decrypt(cipher_text, shift_amount):
    reg_text = ""
    for letter in cipher_text:
        position = alphabet.index(letter)
        new_position = position - shift_amount
        new_letter = alphabet[new_position % len(alphabet)]
        reg_text += new_letter
    print(f"The decoded message is {reg_text}.")

if direction == "encode":
    encrypt(reg_text = text, shift_amount = shift)
#     start_over = input("Would you like to continue? Yes or No?").lower()
#     if start_over == "yes":
#         restart = True
#     else:
#         restart = False
elif direction == "decode":
    decrypt(cipher_text = text, shift_amount = shift)
